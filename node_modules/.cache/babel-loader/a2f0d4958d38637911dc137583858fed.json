{"ast":null,"code":"import _slicedToArray from\"/Users/ryandi/Documents/projects/react/game-of-life-functional/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState,useRef}from'react';import'../styles/Game.css';import HistoryStack from'../utilities/HistoryStack';import Tips from'./Tips.js';import Board from'./Board';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function Game(props){var prevBtn=/*#__PURE__*/React.createRef();var _useState=useState(makeEmptyBoard(props.rows,props.cols)),_useState2=_slicedToArray(_useState,2),board=_useState2[0],setBoard=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),cells=_useState4[0],setCells=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),prev=_useState6[0],setPrev=_useState6[1];var _useState7=useState(new HistoryStack(props.steps)),_useState8=_slicedToArray(_useState7,1),history=_useState8[0];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),running=_useState10[0],setRunning=_useState10[1];// update the cells whenever the board gets updated\nuseEffect(function(){// do not recalculate the cells again\nif(!prev){setCells(makeCells());}setPrev(false);},[board]);// update the `Prev` button status whenever cells get updated\nuseEffect(function(){if(history.size===0){prevBtn.current.disabled=true;}else{prevBtn.current.disabled=false;}},[cells]);useInterval(function(){getNextBoard();},running?500:null);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Tips,{width:props.size*props.cols,steps:props.steps}),/*#__PURE__*/_jsx(Board,{cells:cells,size:props.size,rows:props.rows,cols:props.cols,onClick:function onClick(x,y){return handleClick(x,y);}}),/*#__PURE__*/_jsxs(\"div\",{className:\"controls\",style:{width:props.size*props.cols},children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn\",ref:prevBtn,onClick:getPrevBoard,children:\"Prev\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn\",onClick:getNextBoard,children:\"Next\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn\",onClick:toggleRun,children:running?'Pause':'Run'}),/*#__PURE__*/_jsx(\"button\",{className:\"btn\",onClick:reset,children:\"Reset\"})]})]});function handleClick(x,y){if(x>=0&&x<props.cols&&y>=0&&y<=props.rows){board[y][x]=!board[y][x];}setCells(makeCells());}function makeCells(){var cells=[];for(var y=0;y<props.rows;y++){for(var x=0;x<props.cols;x++){if(board[y][x])cells.push({x:x,y:y,color:randomColor()});}}return cells;}function getNextBoard(){history.push({cells:cells.slice(),board:board.map(function(row){return row.slice();})});var newBoard=board.map(function(row){return row.slice();});for(var y=0;y<props.rows;y++){for(var x=0;x<props.cols;x++){var neighbors=numberOfNeighbors(board,x,y);if(newBoard[y][x]){newBoard[y][x]=neighbors===2||neighbors===3;}else{if(!board[y][x]&&neighbors===3){newBoard[y][x]=true;}}}}setBoard(newBoard);}function getPrevBoard(){if(history.size>0){var _history$pop=history.pop(),_cells=_history$pop.cells,_board=_history$pop.board;setPrev(true);setBoard(_board);setCells(_cells);}}function toggleRun(){setRunning(function(running){return!running;});}function reset(){setRunning(false);setBoard(makeEmptyBoard(props.rows,props.cols));setCells([]);history.clear();}function numberOfNeighbors(b,x,y){var neighbors=0;var dirs=[[-1,-1],[-1,0],[-1,1],[0,-1],[0,1],[1,-1],[1,0],[1,1]];for(var _i=0,_dirs=dirs;_i<_dirs.length;_i++){var _dirs$_i=_slicedToArray(_dirs[_i],2),offY=_dirs$_i[0],offX=_dirs$_i[1];var _y=y+offY;var _x=x+offX;if(_x>=0&&_x<props.cols&&_y>=0&&_y<props.rows&&b[_y][_x])neighbors++;}return neighbors;}}// utilities\nfunction randomColor(){var rc=function rc(){return 30+Math.floor(Math.random()*200);};return{r:rc(),g:rc(),b:rc()};}function makeEmptyBoard(rows,cols){var results=[];for(var y=0;y<rows;y++){results.push([]);for(var x=0;x<cols;x++){results[y].push(false);}}return results;}function useInterval(callback,delay){var savedCallback=useRef();// Remember the latest callback.\nuseEffect(function(){savedCallback.current=callback;},[callback]);// Set up the interval.\nuseEffect(function(){function tick(){savedCallback.current();}if(delay!==null){var id=setInterval(tick,delay);return function(){return clearInterval(id);};}},[delay]);}","map":{"version":3,"sources":["/Users/ryandi/Documents/projects/react/game-of-life-functional/src/components/Game.js"],"names":["React","useEffect","useState","useRef","HistoryStack","Tips","Board","Game","props","prevBtn","createRef","makeEmptyBoard","rows","cols","board","setBoard","cells","setCells","prev","setPrev","steps","history","running","setRunning","makeCells","size","current","disabled","useInterval","getNextBoard","x","y","handleClick","width","getPrevBoard","toggleRun","reset","push","color","randomColor","slice","map","row","newBoard","neighbors","numberOfNeighbors","pop","clear","b","dirs","offY","offX","_y","_x","rc","Math","floor","random","r","g","results","callback","delay","savedCallback","tick","id","setInterval","clearInterval"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport '../styles/Game.css';\nimport HistoryStack from '../utilities/HistoryStack';\nimport Tips from './Tips.js';\nimport Board from './Board';\n\nexport default function Game(props) {\n\tconst prevBtn = React.createRef();\n\tconst [board, setBoard] = useState(makeEmptyBoard(props.rows, props.cols));\n\tconst [cells, setCells] = useState([]);\n\tconst [prev, setPrev] = useState(false);\n\tconst [history] = useState(new HistoryStack(props.steps));\n\tconst [running, setRunning] = useState(false);\n\n\t// update the cells whenever the board gets updated\n\tuseEffect(() => {\n\t\t// do not recalculate the cells again\n\t\tif (!prev) {\n\t\t\tsetCells(makeCells());\n\t\t}\n\t\tsetPrev(false);\n\t}, [board]);\n\n\t// update the `Prev` button status whenever cells get updated\n\tuseEffect(() => {\n\t\tif (history.size === 0) {\n\t\t\tprevBtn.current.disabled = true;\n\t\t} else {\n\t\t\tprevBtn.current.disabled = false;\n\t\t}\n\t}, [cells]);\n\n\tuseInterval(\n\t\t() => {\n\t\t\tgetNextBoard();\n\t\t},\n\t\trunning ? 500 : null\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<Tips width={props.size * props.cols} steps={props.steps} />\n\t\t\t<Board\n\t\t\t\tcells={cells}\n\t\t\t\tsize={props.size}\n\t\t\t\trows={props.rows}\n\t\t\t\tcols={props.cols}\n\t\t\t\tonClick={(x, y) => handleClick(x, y)}\n\t\t\t/>\n\t\t\t<div className=\"controls\" style={{ width: props.size * props.cols }}>\n\t\t\t\t<button className=\"btn\" ref={prevBtn} onClick={getPrevBoard}>\n\t\t\t\t\tPrev\n\t\t\t\t</button>\n\t\t\t\t<button className=\"btn\" onClick={getNextBoard}>\n\t\t\t\t\tNext\n\t\t\t\t</button>\n\t\t\t\t<button className=\"btn\" onClick={toggleRun}>\n\t\t\t\t\t{running ? 'Pause' : 'Run'}\n\t\t\t\t</button>\n\t\t\t\t<button className=\"btn\" onClick={reset}>\n\t\t\t\t\tReset\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</>\n\t);\n\n\tfunction handleClick(x, y) {\n\t\tif (x >= 0 && x < props.cols && y >= 0 && y <= props.rows) {\n\t\t\tboard[y][x] = !board[y][x];\n\t\t}\n\t\tsetCells(makeCells());\n\t}\n\n\tfunction makeCells() {\n\t\tlet cells = [];\n\t\tfor (let y = 0; y < props.rows; y++) {\n\t\t\tfor (let x = 0; x < props.cols; x++) {\n\t\t\t\tif (board[y][x]) cells.push({ x, y, color: randomColor() });\n\t\t\t}\n\t\t}\n\t\treturn cells;\n\t}\n\n\tfunction getNextBoard() {\n\t\thistory.push({\n\t\t\tcells: cells.slice(),\n\t\t\tboard: board.map((row) => row.slice()),\n\t\t});\n\t\tlet newBoard = board.map((row) => row.slice());\n\t\tfor (let y = 0; y < props.rows; y++) {\n\t\t\tfor (let x = 0; x < props.cols; x++) {\n\t\t\t\tlet neighbors = numberOfNeighbors(board, x, y);\n\t\t\t\tif (newBoard[y][x]) {\n\t\t\t\t\tnewBoard[y][x] = neighbors === 2 || neighbors === 3;\n\t\t\t\t} else {\n\t\t\t\t\tif (!board[y][x] && neighbors === 3) {\n\t\t\t\t\t\tnewBoard[y][x] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tsetBoard(newBoard);\n\t}\n\n\tfunction getPrevBoard() {\n\t\tif (history.size > 0) {\n\t\t\tlet { cells, board } = history.pop();\n\t\t\tsetPrev(true);\n\t\t\tsetBoard(board);\n\t\t\tsetCells(cells);\n\t\t}\n\t}\n\n\tfunction toggleRun() {\n\t\tsetRunning((running) => !running);\n\t}\n\n\tfunction reset() {\n\t\tsetRunning(false);\n\t\tsetBoard(makeEmptyBoard(props.rows, props.cols));\n\t\tsetCells([]);\n\t\thistory.clear();\n\t}\n\n\tfunction numberOfNeighbors(b, x, y) {\n\t\tlet neighbors = 0;\n\t\tconst dirs = [\n\t\t\t[-1, -1],\n\t\t\t[-1, 0],\n\t\t\t[-1, 1],\n\t\t\t[0, -1],\n\t\t\t[0, 1],\n\t\t\t[1, -1],\n\t\t\t[1, 0],\n\t\t\t[1, 1],\n\t\t];\n\n\t\tfor (let [offY, offX] of dirs) {\n\t\t\tlet _y = y + offY;\n\t\t\tlet _x = x + offX;\n\n\t\t\tif (_x >= 0 && _x < props.cols && _y >= 0 && _y < props.rows && b[_y][_x])\n\t\t\t\tneighbors++;\n\t\t}\n\t\treturn neighbors;\n\t}\n}\n\n// utilities\nfunction randomColor() {\n\tconst rc = () => 30 + Math.floor(Math.random() * 200);\n\treturn {\n\t\tr: rc(),\n\t\tg: rc(),\n\t\tb: rc(),\n\t};\n}\n\nfunction makeEmptyBoard(rows, cols) {\n\tlet results = [];\n\tfor (let y = 0; y < rows; y++) {\n\t\tresults.push([]);\n\t\tfor (let x = 0; x < cols; x++) {\n\t\t\tresults[y].push(false);\n\t\t}\n\t}\n\treturn results;\n}\n\nfunction useInterval(callback, delay) {\n\tconst savedCallback = useRef();\n\n\t// Remember the latest callback.\n\tuseEffect(() => {\n\t\tsavedCallback.current = callback;\n\t}, [callback]);\n\n\t// Set up the interval.\n\tuseEffect(() => {\n\t\tfunction tick() {\n\t\t\tsavedCallback.current();\n\t\t}\n\t\tif (delay !== null) {\n\t\t\tlet id = setInterval(tick, delay);\n\t\t\treturn () => clearInterval(id);\n\t\t}\n\t}, [delay]);\n}\n"]},"metadata":{},"sourceType":"module"}