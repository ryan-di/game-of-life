{"ast":null,"code":"var _jsxFileName = \"/Users/ryandi/Documents/projects/react/game-of-life-functional/src/NewGame.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './NewGame.css';\nimport HistoryStack from './HistoryStack';\nimport Tips from './Tips';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cell(props) {\n  let left = props.size * props.x + 1;\n  let top = props.size * props.y + 1;\n  let size = props.size - 1;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Cell\",\n    style: {\n      left,\n      top,\n      width: size,\n      height: size,\n      backgroundColor: `rgb(${randomColor()}, ${randomColor()}, ${randomColor()})`\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }, this);\n}\n\n_c = Cell;\nexport default function Board(props) {\n  _s();\n\n  // props.rows, props.cols, props.size\n  let boardRef = /*#__PURE__*/React.createRef();\n  const [cells, setCells] = useState([]);\n  const [board, setBoard] = useState(makeEmptyBoard(props.rows, props.cols));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Board\",\n    style: {\n      width: props.size * props.cols,\n      height: props.size * props.rows,\n      backgroundSize: `${props.size}px ${props.size}px`\n    },\n    ref: boardRef,\n    onClick: handleClick,\n    children: cells.map(cell => /*#__PURE__*/_jsxDEV(Cell, {\n      x: cell.x,\n      y: cell.y,\n      size: props.size\n    }, `${cell.y}, ${cell.x}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }, this);\n  /**\n   *\n   * @param {MouseEvent} event\n   */\n\n  function handleClick(event) {\n    const rect = boardRef.current.getBoundingClientRect();\n    const doc = document.documentElement;\n    const x = event.clientX - (rect.left + window.pageXOffset - doc.clientLeft);\n    const y = event.clientY - (rect.top + window.pageYOffset - doc.clientTop);\n    if (x >= 0 && x < props.cols && y >= 0 && y <= props.rows) board[y][x] = !board[y][x];\n    setCells(makeCellsFromBoard(board));\n  }\n\n  function makeCellsFromBoard(board) {\n    let cells = [];\n\n    for (let y = 0; y < props.rows; y++) {\n      for (let x = 0; x < props.cols; x++) {\n        if (board[y][x]) cells.push({\n          x,\n          y\n        });\n      }\n    }\n\n    return cells;\n  }\n} // utilities\n\n_s(Board, \"SzVR037ZbjOIHLs8r0t5fnxMUPg=\");\n\n_c2 = Board;\n\nfunction randomColor() {\n  return 30 + Math.floor(Math.random() * 200);\n}\n\nfunction makeEmptyBoard(rows, cols) {\n  let results = [];\n\n  for (let y = 0; y < rows; y++) {\n    results.push([]);\n\n    for (let x = 0; x < cols; x++) {\n      results[y].push(false);\n    }\n  }\n\n  return results;\n}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Cell\");\n$RefreshReg$(_c2, \"Board\");","map":{"version":3,"sources":["/Users/ryandi/Documents/projects/react/game-of-life-functional/src/NewGame.js"],"names":["React","useState","HistoryStack","Tips","Cell","props","left","size","x","top","y","width","height","backgroundColor","randomColor","Board","boardRef","createRef","cells","setCells","board","setBoard","makeEmptyBoard","rows","cols","backgroundSize","handleClick","map","cell","event","rect","current","getBoundingClientRect","doc","document","documentElement","clientX","window","pageXOffset","clientLeft","clientY","pageYOffset","clientTop","makeCellsFromBoard","push","Math","floor","random","results"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './NewGame.css';\nimport HistoryStack from './HistoryStack';\nimport Tips from './Tips';\n\nfunction Cell(props) {\n\tlet left = props.size * props.x + 1;\n\tlet top = props.size * props.y + 1;\n\tlet size = props.size - 1;\n\treturn (\n\t\t<div\n\t\t\tclassName=\"Cell\"\n\t\t\tstyle={{\n\t\t\t\tleft,\n\t\t\t\ttop,\n\t\t\t\twidth: size,\n\t\t\t\theight: size,\n\t\t\t\tbackgroundColor: `rgb(${randomColor()}, ${randomColor()}, ${randomColor()})`,\n\t\t\t}}\n\t\t/>\n\t);\n}\n\nexport default function Board(props) {\n\t// props.rows, props.cols, props.size\n\tlet boardRef = React.createRef();\n\tconst [cells, setCells] = useState([]);\n\tconst [board, setBoard] = useState(makeEmptyBoard(props.rows, props.cols));\n\n\treturn (\n\t\t<div\n\t\t\tclassName=\"Board\"\n\t\t\tstyle={{\n\t\t\t\twidth: props.size * props.cols,\n\t\t\t\theight: props.size * props.rows,\n\t\t\t\tbackgroundSize: `${props.size}px ${props.size}px`,\n\t\t\t}}\n\t\t\tref={boardRef}\n\t\t\tonClick={handleClick}\n\t\t>\n\t\t\t{cells.map((cell) => (\n\t\t\t\t<Cell\n\t\t\t\t\tx={cell.x}\n\t\t\t\t\ty={cell.y}\n\t\t\t\t\tsize={props.size}\n\t\t\t\t\tkey={`${cell.y}, ${cell.x}`}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</div>\n\t);\n\n\t/**\n\t *\n\t * @param {MouseEvent} event\n\t */\n\tfunction handleClick(event) {\n\t\tconst rect = boardRef.current.getBoundingClientRect();\n\t\tconst doc = document.documentElement;\n\n\t\tconst x = event.clientX - (rect.left + window.pageXOffset - doc.clientLeft);\n\t\tconst y = event.clientY - (rect.top + window.pageYOffset - doc.clientTop);\n\n\t\tif (x >= 0 && x < props.cols && y >= 0 && y <= props.rows)\n\t\t\tboard[y][x] = !board[y][x];\n\t\tsetCells(makeCellsFromBoard(board));\n\t}\n\n\tfunction makeCellsFromBoard(board) {\n\t\tlet cells = [];\n\t\tfor (let y = 0; y < props.rows; y++) {\n\t\t\tfor (let x = 0; x < props.cols; x++) {\n\t\t\t\tif (board[y][x]) cells.push({ x, y });\n\t\t\t}\n\t\t}\n\t\treturn cells;\n\t}\n}\n\n// utilities\nfunction randomColor() {\n\treturn 30 + Math.floor(Math.random() * 200);\n}\n\nfunction makeEmptyBoard(rows, cols) {\n\tlet results = [];\n\tfor (let y = 0; y < rows; y++) {\n\t\tresults.push([]);\n\t\tfor (let x = 0; x < cols; x++) {\n\t\t\tresults[y].push(false);\n\t\t}\n\t}\n\treturn results;\n}\n"]},"metadata":{},"sourceType":"module"}