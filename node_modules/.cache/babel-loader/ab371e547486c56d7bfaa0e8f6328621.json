{"ast":null,"code":"var _jsxFileName = \"/Users/ryandi/Documents/projects/react/game-of-life-functional/src/components/Board.js\",\n    _s = $RefreshSig$();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cell(props) {\n  _s();\n\n  let left = props.size * props.x + 1;\n  let top = props.size * props.y + 1;\n  let size = props.size - 1;\n  const [color] = useState(props.color);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Cell\",\n    style: {\n      left,\n      top,\n      width: size,\n      height: size,\n      backgroundColor: `rgb(${color.r}, ${color.g}, ${color.b})`\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }, this);\n}\n\n_c = Cell;\n\n_s(Cell, \"42HK6m5AIr09a8SaL6H1DD9LG0o=\");\n\nexport default function Board(props) {\n  let boardRef = React.createRef();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Board\",\n    style: {\n      width: props.size * props.cols,\n      height: props.size * props.rows,\n      backgroundSize: `${props.size}px ${props.size}px`\n    },\n    ref: boardRef,\n    onClick: event => {\n      const pos = getClickPosition(event);\n      props.onClick(pos.x, pos.y);\n    },\n    children: props.cells.map(cell => /*#__PURE__*/_jsxDEV(Cell, {\n      x: cell.x,\n      y: cell.y,\n      color: cell.color,\n      size: props.size\n    }, `${cell.y}, ${cell.x}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }, this);\n\n  function getClickPosition(event) {\n    const rect = boardRef.current.getBoundingClientRect();\n    const offX = event.clientX - rect.left;\n    const offY = event.clientY - rect.top;\n    const x = Math.floor(offX / props.size);\n    const y = Math.floor(offY / props.size);\n    return {\n      x,\n      y\n    };\n  }\n}\n_c2 = Board;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Cell\");\n$RefreshReg$(_c2, \"Board\");","map":{"version":3,"sources":["/Users/ryandi/Documents/projects/react/game-of-life-functional/src/components/Board.js"],"names":["Cell","props","left","size","x","top","y","color","useState","width","height","backgroundColor","r","g","b","Board","boardRef","React","createRef","cols","rows","backgroundSize","event","pos","getClickPosition","onClick","cells","map","cell","rect","current","getBoundingClientRect","offX","clientX","offY","clientY","Math","floor"],"mappings":";;;;;AAAA,SAASA,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACpB,MAAIC,IAAI,GAAGD,KAAK,CAACE,IAAN,GAAaF,KAAK,CAACG,CAAnB,GAAuB,CAAlC;AACA,MAAIC,GAAG,GAAGJ,KAAK,CAACE,IAAN,GAAaF,KAAK,CAACK,CAAnB,GAAuB,CAAjC;AACA,MAAIH,IAAI,GAAGF,KAAK,CAACE,IAAN,GAAa,CAAxB;AACA,QAAM,CAACI,KAAD,IAAUC,QAAQ,CAACP,KAAK,CAACM,KAAP,CAAxB;AACA,sBACC;AACC,IAAA,SAAS,EAAC,MADX;AAEC,IAAA,KAAK,EAAE;AACNL,MAAAA,IADM;AAENG,MAAAA,GAFM;AAGNI,MAAAA,KAAK,EAAEN,IAHD;AAINO,MAAAA,MAAM,EAAEP,IAJF;AAKNQ,MAAAA,eAAe,EAAG,OAAMJ,KAAK,CAACK,CAAE,KAAIL,KAAK,CAACM,CAAE,KAAIN,KAAK,CAACO,CAAE;AALlD;AAFR;AAAA;AAAA;AAAA;AAAA,UADD;AAYA;;KAjBQd,I;;GAAAA,I;;AAmBT,eAAe,SAASe,KAAT,CAAed,KAAf,EAAsB;AACpC,MAAIe,QAAQ,GAAGC,KAAK,CAACC,SAAN,EAAf;AAEA,sBACC;AACC,IAAA,SAAS,EAAC,OADX;AAEC,IAAA,KAAK,EAAE;AACNT,MAAAA,KAAK,EAAER,KAAK,CAACE,IAAN,GAAaF,KAAK,CAACkB,IADpB;AAENT,MAAAA,MAAM,EAAET,KAAK,CAACE,IAAN,GAAaF,KAAK,CAACmB,IAFrB;AAGNC,MAAAA,cAAc,EAAG,GAAEpB,KAAK,CAACE,IAAK,MAAKF,KAAK,CAACE,IAAK;AAHxC,KAFR;AAOC,IAAA,GAAG,EAAEa,QAPN;AAQC,IAAA,OAAO,EAAGM,KAAD,IAAW;AACnB,YAAMC,GAAG,GAAGC,gBAAgB,CAACF,KAAD,CAA5B;AACArB,MAAAA,KAAK,CAACwB,OAAN,CAAcF,GAAG,CAACnB,CAAlB,EAAqBmB,GAAG,CAACjB,CAAzB;AACA,KAXF;AAAA,cAaEL,KAAK,CAACyB,KAAN,CAAYC,GAAZ,CAAiBC,IAAD,iBAChB,QAAC,IAAD;AACC,MAAA,CAAC,EAAEA,IAAI,CAACxB,CADT;AAEC,MAAA,CAAC,EAAEwB,IAAI,CAACtB,CAFT;AAGC,MAAA,KAAK,EAAEsB,IAAI,CAACrB,KAHb;AAIC,MAAA,IAAI,EAAEN,KAAK,CAACE;AAJb,OAKO,GAAEyB,IAAI,CAACtB,CAAE,KAAIsB,IAAI,CAACxB,CAAE,EAL3B;AAAA;AAAA;AAAA;AAAA,YADA;AAbF;AAAA;AAAA;AAAA;AAAA,UADD;;AA0BA,WAASoB,gBAAT,CAA0BF,KAA1B,EAAiC;AAChC,UAAMO,IAAI,GAAGb,QAAQ,CAACc,OAAT,CAAiBC,qBAAjB,EAAb;AACA,UAAMC,IAAI,GAAGV,KAAK,CAACW,OAAN,GAAgBJ,IAAI,CAAC3B,IAAlC;AACA,UAAMgC,IAAI,GAAGZ,KAAK,CAACa,OAAN,GAAgBN,IAAI,CAACxB,GAAlC;AACA,UAAMD,CAAC,GAAGgC,IAAI,CAACC,KAAL,CAAWL,IAAI,GAAG/B,KAAK,CAACE,IAAxB,CAAV;AACA,UAAMG,CAAC,GAAG8B,IAAI,CAACC,KAAL,CAAWH,IAAI,GAAGjC,KAAK,CAACE,IAAxB,CAAV;AACA,WAAO;AACNC,MAAAA,CADM;AAENE,MAAAA;AAFM,KAAP;AAIA;AACD;MAxCuBS,K","sourcesContent":["function Cell(props) {\n\tlet left = props.size * props.x + 1;\n\tlet top = props.size * props.y + 1;\n\tlet size = props.size - 1;\n\tconst [color] = useState(props.color);\n\treturn (\n\t\t<div\n\t\t\tclassName=\"Cell\"\n\t\t\tstyle={{\n\t\t\t\tleft,\n\t\t\t\ttop,\n\t\t\t\twidth: size,\n\t\t\t\theight: size,\n\t\t\t\tbackgroundColor: `rgb(${color.r}, ${color.g}, ${color.b})`,\n\t\t\t}}\n\t\t/>\n\t);\n}\n\nexport default function Board(props) {\n\tlet boardRef = React.createRef();\n\n\treturn (\n\t\t<div\n\t\t\tclassName=\"Board\"\n\t\t\tstyle={{\n\t\t\t\twidth: props.size * props.cols,\n\t\t\t\theight: props.size * props.rows,\n\t\t\t\tbackgroundSize: `${props.size}px ${props.size}px`,\n\t\t\t}}\n\t\t\tref={boardRef}\n\t\t\tonClick={(event) => {\n\t\t\t\tconst pos = getClickPosition(event);\n\t\t\t\tprops.onClick(pos.x, pos.y);\n\t\t\t}}\n\t\t>\n\t\t\t{props.cells.map((cell) => (\n\t\t\t\t<Cell\n\t\t\t\t\tx={cell.x}\n\t\t\t\t\ty={cell.y}\n\t\t\t\t\tcolor={cell.color}\n\t\t\t\t\tsize={props.size}\n\t\t\t\t\tkey={`${cell.y}, ${cell.x}`}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</div>\n\t);\n\n\tfunction getClickPosition(event) {\n\t\tconst rect = boardRef.current.getBoundingClientRect();\n\t\tconst offX = event.clientX - rect.left;\n\t\tconst offY = event.clientY - rect.top;\n\t\tconst x = Math.floor(offX / props.size);\n\t\tconst y = Math.floor(offY / props.size);\n\t\treturn {\n\t\t\tx,\n\t\t\ty,\n\t\t};\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}